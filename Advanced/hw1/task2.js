// Вы управляете рестораном, в котором работают разные повара, 
// специализирующиеся на определенных блюдах. Клиенты приходят 
// и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, 
// а также для хранения заказов каждого клиента. В качестве ключей 
// для клиентов используйте объекты.

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.


const chefSpecialisation = new Map();
chefSpecialisation.set('Виктор', 'Пицца');
chefSpecialisation.set('Ольга', 'Суши');
chefSpecialisation.set('Дмитрий', 'Десерты');

const dishesChefs = new Map([
    ['Виктор', ['Пицца "Маргарита"', 'Пицца "Пепперони"']],
    ['Ольга', ['Суши "Филадельфия"', 'Суши "Калифорния"']],
    ['Дмитрий', ['Тирамису', 'Чизкейк']]
]);


const alekseyOrder = new Set();
alekseyOrder.add('Пицца "Пепперони"');
alekseyOrder.add('Тирамису');

const mariaOrder = new Set();
mariaOrder.add('Суши "Калифорния"');
mariaOrder.add('Пицца "Маргарита"');

const irinaOrder = new Set();
irinaOrder.add('Чизкейк');

const orders = new Map();
orders.set('Ирина', irinaOrder);
orders.set('Алексей', alekseyOrder);
orders.set('Мария', mariaOrder);


console.log(`Мария заказала ${[...orders.get('Мария')]}`);

console.log(`Блюда, которые готовит Дмитрий:`);
dishesChefs.forEach((dish, chef) => {
    if (chef === 'Дмитрий') {
        console.log(`- ${dish}`);
    }
});